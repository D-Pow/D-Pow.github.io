{"version":3,"sources":["styles/Triangle.scss","assets/react_logo.svg","utils/Constants.js","utils/Functions.js","components/Triangle/Triangle.js","components/Triangle/index.js","components/Home/SplashSection/index.js","components/Home/SplashSection/SplashSection.js","components/Home/index.js","components/Home/Home.js","components/About.js","components/Header/index.js","components/Header/Header.js","components/Footer/index.js","components/Footer/Footer.js","components/App.js","registerServiceWorker.js","index.js"],"names":["module","exports","durationMin","durationMax","__webpack_require__","p","COLORS","randomColor","colorsToAvoid","forbiddenColors","chosenColor","Math","floor","random","length","includes","randomNumber","min","max","Number","isNaN","Triangle","_style","_this$props","this","props","upsideDown","color","height","baseHalved","sin","PI","borderColorField","borderHeightField","originHeight","concat","classNames","push","spinDelay","animationDuration","round","style","Object","defineProperty","react_default","a","createElement","className","join","React","Component","defaultProps","SplashSection","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","pageText","welcomeTitle","numRows","state","windowSize","width","window","innerWidth","innerHeight","triangleColorMatrix","_this2","updateTriangleColorMatrix","onresize","setState","rowIndex","colIndex","colorMatrix","neighbors","triangleHeight","_this$state","numTrianglesInRow","ceil","chosenColors","map","row","slice","getNeighboringColors","_this3","renderedTriangleMatrix","col","components_Triangle","key","i","renderedTitle","Fragment","renderTriangles","renderWelcomeText","Home","Home_SplashSection","About","Header","classList","handleScroll","bind","assertThisInitialized","addEventListener","removeEventListener","hideHeader","isActivePath","pageYOffset","toggleHeader","hide","toConsumableArray","isHidden","indexOf","splice","routeIndex","path","navRoutes","location","hash","routeLinks","routeAria","index","name","active","Link","to","replace","navBar","renderNavBar","ref","Footer","src","reactLogo","alt","renderReactLogo","routes","component","exact","Routes","renderedRoutes","Route","assign","HashRouter","basename","basedir","components_Header","components_Footer","App","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","rootDiv","document","getElementById","ReactDOM","render","components_App","URL","process","origin","fetch","response","status","headers","get","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.f3b9241e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"durationMin\":\"3\",\"durationMax\":\"20\"};","module.exports = __webpack_public_path__ + \"static/media/react_logo.5d5d9eef.svg\";","export const COLORS = [\n    'red',\n    'blue',\n    'purple',\n    'pink',\n    'orange',\n    'green',\n    'yellow',\n    'gray',\n    'teal',\n    'cyan',\n    'indigo',\n    'darkblue',\n    'deepskyblue',\n    'lawngreen',\n    'maroon',\n    'magenta',\n    'rosybrown',\n    'royalblue',\n    'salmon',\n    'sandybrown'\n];\n\nexport const SHOW_ELEMENT_SCROLL_THRESHOLD = 3/4;\n","import { COLORS } from \"./Constants\";\n\nexport function randomColor(colorsToAvoid) {\n    let forbiddenColors;\n    if (colorsToAvoid == null) {\n        forbiddenColors = [''];\n    } else if (typeof(colorsToAvoid) === 'string') {\n        forbiddenColors = [colorsToAvoid];\n    } else {\n        forbiddenColors = colorsToAvoid;\n    }\n\n    let chosenColor;\n    do {\n        chosenColor = COLORS[Math.floor(Math.random() * COLORS.length)];\n    } while(forbiddenColors.includes(chosenColor));\n    return chosenColor;\n}\n\nexport function randomNumber(min, max) {\n    if (max == null) {\n        max = min;\n        min = 0;\n    }\n\n    min = Number(min);\n    max = Number(max);\n    if (isNaN(min) || isNaN(max)) {\n        return Math.random();\n    }\n\n    return (Math.random() * (max - min)) + min;\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport 'styles/Triangle.scss';\nimport { durationMin, durationMax } from 'styles/Triangle.scss';\nimport { randomNumber } from \"../../utils/Functions\";\n\nclass Triangle extends React.Component {\n    render() {\n        const {\n            upsideDown,\n            color,\n            height\n        } = this.props;\n        const base = height / Math.sin(Math.PI / 3); // Equilateral triangle: sin(60deg == pi/3) = height / base\n        const baseHalved = base/2; // Actual CSS base length\n\n        let borderColorField = 'borderBottomColor';\n        let borderHeightField = 'borderBottomWidth';\n        let originHeight = `${height * 2/3}px`; // deal with uneven border widths by offsetting rotation origin\n        const classNames = [\n            'triangle'\n        ];\n        if (upsideDown) {\n            borderColorField = 'borderTopColor';\n            borderHeightField = 'borderTopWidth';\n            originHeight = `${height / 3}px`;\n            classNames.push('upside-down');\n        }\n\n        const spinDelay = this.props.spinDelay || randomNumber(1);\n        const animationDuration = this.props.animationDuration || Math.round(randomNumber(durationMin, durationMax));\n        const style = {\n            [borderColorField]: color,\n            [borderHeightField]: `${height}px`,\n            borderLeftWidth: `${baseHalved}px`,\n            borderRightWidth: `${baseHalved}px`,\n            animationName: `spin-${animationDuration}`,\n            animationDuration: `${animationDuration}s`,\n            animationDelay: `${spinDelay}s`,\n            transformOrigin: `${baseHalved} ${originHeight}`,\n            marginLeft: `-${baseHalved}px`\n        };\n\n        return (\n            <div className={classNames.join(' ')} style={style} />\n        );\n    }\n}\n\nTriangle.propTypes = {\n    color: PropTypes.string,\n    spinDelay: PropTypes.number,\n    animationDuration: PropTypes.number,\n    upsideDown: PropTypes.bool,\n    height: PropTypes.number\n};\n\nTriangle.defaultProps = {\n    color: 'red',\n    upsideDown: false,\n    height: 86\n};\n\nexport default Triangle;\n","import Triangle from './Triangle';\n\nexport default Triangle;\n","import SplashSection from './SplashSection';\n\nexport default SplashSection;\n","import React from 'react';\r\nimport 'styles/SplashSection.scss';\r\nimport Triangle from 'components/Triangle';\r\nimport { randomColor } from 'utils/Functions';\r\n\r\nclass SplashSection extends React.Component {\r\n    pageText = {\r\n        welcomeTitle: \"Hey there, I'm Devon!\"\r\n    };\r\n\r\n    numRows = 8;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            windowSize: {\r\n                width: window.innerWidth,\r\n                height: window.innerHeight\r\n            },\r\n            triangleColorMatrix: []\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.updateTriangleColorMatrix();\r\n\r\n        window.onresize = () => {\r\n            this.setState({\r\n                windowSize: {\r\n                    width: window.innerWidth,\r\n                    height: window.innerHeight\r\n                }\r\n            });\r\n            this.updateTriangleColorMatrix();\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.onresize = null;\r\n    }\r\n\r\n    get triangleHeight() {\r\n        return this.state.windowSize.height / this.numRows;\r\n    }\r\n\r\n    getNeighboringColors(rowIndex, colIndex, colorMatrix) {\r\n        const neighbors = [];\r\n        if (rowIndex > 0) {\r\n            neighbors.push(colorMatrix[rowIndex-1][colIndex]);\r\n        }\r\n        if (colIndex > 0) {\r\n            neighbors.push(colorMatrix[rowIndex][colIndex-1]);\r\n        }\r\n        return neighbors;\r\n    }\r\n\r\n    updateTriangleColorMatrix() {\r\n        const { triangleHeight } = this;\r\n        const { windowSize: { width }, triangleColorMatrix } = this.state;\r\n        const numTrianglesInRow = Math.ceil(width / triangleHeight) * 2; // Two triangles fit inside one base length\r\n\r\n        const chosenColors = triangleColorMatrix.map(row => row.slice(0, numTrianglesInRow));  // delete extra, unnecessary rows\r\n        for (let rowIndex = 0; rowIndex < this.numRows; rowIndex++) {\r\n            if (!chosenColors[rowIndex]) {\r\n                chosenColors.push([]);\r\n            }\r\n\r\n            const row = chosenColors[rowIndex];\r\n            for (let colIndex = 0; colIndex < numTrianglesInRow; colIndex++) {\r\n                if (!row[colIndex]) {\r\n                    const neighboringColors = this.getNeighboringColors(rowIndex, colIndex, chosenColors);\r\n                    const color = randomColor(neighboringColors);\r\n                    chosenColors[rowIndex].push(color);\r\n                }\r\n            }\r\n        }\r\n\r\n        this.setState({ triangleColorMatrix: chosenColors });\r\n    }\r\n\r\n    renderTriangles() {\r\n        const { triangleColorMatrix } = this.state;\r\n\r\n        const renderedTriangleMatrix = triangleColorMatrix.map((row, rowIndex) => row.map((col, colIndex) => (\r\n            <Triangle\r\n                color={col}\r\n                height={this.triangleHeight}\r\n                key={`${rowIndex}-${colIndex}`}\r\n                upsideDown={(colIndex + rowIndex) % 2 === 0}\r\n            />\r\n        )));\r\n\r\n        return (\r\n            <div className={'triangle-section bg-white'}>\r\n                {renderedTriangleMatrix.map((row, i) => (\r\n                    <div className={'triangle-row'} key={i}>\r\n                        {row}\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    renderWelcomeText() {\r\n        const renderedTitle = (<h2 className={'text-white'}>{this.pageText.welcomeTitle}</h2>);\r\n\r\n        return (\r\n            <div className={'text-center position-absolute w-100 top-30'}>\r\n                <div className={'bg-dark border border-primary border-size-5 rounded shadow-lg m-auto py-3 px-1'} style={{width: '40%'}}>\r\n                    {renderedTitle}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                {this.renderTriangles()}\r\n                {this.renderWelcomeText()}\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SplashSection;\r\n","import Home from './Home';\n\nexport default Home;\n","import React from 'react';\nimport SplashSection from 'components/Home/SplashSection';\n\nclass Home extends React.Component {\n    render() {\n        // TODO What would you like to know about me? (list traits here)\n        return (\n            <React.Fragment>\n                <SplashSection />\n                <div style={{height: '500px'}}>Meh</div>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default Home;\n","import React from 'react';\n\nclass About extends React.Component {\n    render() {\n        return (\n            <React.Fragment>About</React.Fragment>\n        );\n    }\n}\n\nexport default About;\n","import Header from './Header';\n\nexport default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport 'styles/Header.scss';\nimport {Link} from \"react-router-dom\";\n\nclass Header extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            classList: [\n                'header',\n                'float-right'\n            ]\n        };\n        this.handleScroll = this.handleScroll.bind(this);\n    }\n\n    componentDidMount() {\n        window.addEventListener('scroll', this.handleScroll);\n        this.handleScroll();\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('scroll', this.handleScroll);\n    }\n\n    handleScroll() {\n        const hideHeader = this.isActivePath(0) && window.pageYOffset === 0;\n        this.toggleHeader(hideHeader);\n    }\n\n    toggleHeader(hide) {\n        const classList = [...this.state.classList];\n        const className = 'header-hidden';\n        const isHidden = classList.indexOf(className) >= 0;\n        if (hide && !isHidden) {\n            classList.push(className);\n        } else if (!hide && isHidden) {\n            classList.splice(isHidden, 1);\n        }\n        this.setState({ classList: classList});\n    }\n\n    isActivePath(routeIndex) {\n        const { path } = this.props.navRoutes[routeIndex];\n        const currentPath = window.location.hash.slice(1);\n        return currentPath === path;\n    }\n\n    renderNavBar() {\n        const routeLinks = this.props.navRoutes.map((routeAria, index) => {\n            const { path, name } = routeAria;\n            const active = this.isActivePath(index);\n            const classNames = ['nav-link'];\n            if (active) {\n                routeAria.active = true;\n                classNames.push('active');\n            }\n            return (\n                <Link to={path} className={classNames.join(' ')} key={path} replace={active}>{name}</Link>\n            );\n        });\n\n        return (\n            <nav className={'nav border-left border-bottom border-primary border-size-3 bg-dark'}>\n                {routeLinks}\n            </nav>\n        );\n    }\n\n    render() {\n        const navBar = this.renderNavBar();\n\n        return (\n            <header className={this.state.classList.join(' ')} ref={this.ref}>\n                {navBar}\n            </header>\n        );\n    }\n}\n\nHeader.propTypes = {\n    navRoutes: PropTypes.arrayOf(PropTypes.shape({\n        path: PropTypes.string.isRequired,\n        component: PropTypes.func.isRequired\n    }))\n};\n\nexport default Header;\n","import Footer from './Footer';\n\nexport default Footer;\n","import React from 'react';\nimport reactLogo from 'assets/react_logo.svg';\nimport 'styles/Footer.scss';\n\nclass Footer extends React.Component {\n    renderReactLogo() {\n        return (\n            <span>\n                <h4 className={'footer-title'}>Made with React 16</h4>\n                <img src={reactLogo} className=\"react-logo\" alt=\"logo\" />\n            </span>\n        );\n    }\n\n    render() {\n        return (\n            <footer className={'footer-container w-100'}>\n                {this.renderReactLogo()}\n            </footer>\n        );\n    }\n}\n\nexport default Footer;\n","import React from 'react';\nimport { HashRouter as Router, Route } from 'react-router-dom';\nimport Home from 'components/Home';\nimport About from 'components/About';\nimport Header from 'components/Header';\nimport Footer from 'components/Footer';\n\nconst routes = [\n    {\n        path: '/',\n        component: Home,\n        name: 'Home',\n        exact: true\n    },\n    {\n        path: '/about',\n        component: About,\n        name: 'About'\n    }\n];\n\nfunction Routes(props) {\n    const renderedRoutes = routes.map(routeAria => (\n        <Route key={routeAria.path} {...routeAria} />\n    ));\n    return (\n        <Router basename={props.basedir}>\n            <React.Fragment>\n                <Header basedir={props.basedir} navRoutes={routes} />\n                {renderedRoutes}\n                <Footer />\n            </React.Fragment>\n        </Router>\n    );\n}\n\nclass App extends React.Component {\n    render() {\n        return (\n            <div className=\"App text-center\">\n                <Routes />\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/ServiceWorker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'styles/index.scss';\nimport App from 'components/App';\nimport registerServiceWorker from './registerServiceWorker';\n\nconst rootDiv = document.getElementById('root');\n\nReactDOM.render(\n    <App />,\n    rootDiv\n);\nregisterServiceWorker();\n\n// hot reloading\nif (process.env.NODE_ENV !== 'production' && module.hot) {\n  console.log('hot reloading active');\n  module.hot.accept('components/App', () => {\n    const NextApp = require('components/App').default;\n    ReactDOM.render(\n      <NextApp />,\n      rootDiv\n    )\n  })\n}\n"],"sourceRoot":""}