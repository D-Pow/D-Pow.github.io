{"version":3,"sources":["styles/Triangle.scss","assets/react_logo.svg","utils/Constants.js","utils/Functions.js","components/Triangle/Triangle.js","components/Triangle/index.js","components/Home/index.js","components/Home/Home.js","components/About.js","components/Header/index.js","components/Header/Header.js","components/Footer/index.js","components/Footer/Footer.js","components/App.js","registerServiceWorker.js","index.js"],"names":["module","exports","durationMin","durationMax","__webpack_require__","p","COLORS","randomColor","colorsToAvoid","forbiddenColors","chosenColor","Math","floor","random","length","includes","randomNumber","min","max","Number","isNaN","Triangle","_style","_this$props","this","props","upsideDown","color","height","baseHalved","sin","PI","borderColorField","borderHeightField","originHeight","concat","classNames","push","spinDelay","animationDuration","round","style","Object","defineProperty","react_default","a","createElement","className","join","React","Component","defaultProps","Home","_this","window","onresize","forceUpdate","rowIndex","colIndex","colorMatrix","neighbors","triangleHeight","innerHeight","numTrianglesInRow","ceil","innerWidth","rows","chosenColors","renderedRow","getNeighboringColors","components_Triangle","key","map","row","i","Fragment","renderTriangles","renderSplashSection","About","Header","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","classList","handleScroll","bind","assertThisInitialized","addEventListener","removeEventListener","hideHeader","isActivePath","pageYOffset","toggleHeader","hide","toConsumableArray","isHidden","indexOf","splice","setState","routeIndex","path","navRoutes","location","hash","slice","_this2","routeLinks","routeAria","index","name","active","Link","to","replace","navBar","renderNavBar","ref","Footer","src","reactLogo","alt","renderReactLogo","routes","component","exact","Routes","renderedRoutes","Route","assign","HashRouter","basename","basedir","components_Header","components_Footer","App","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","rootDiv","document","getElementById","ReactDOM","render","components_App","URL","process","origin","fetch","response","status","headers","get","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.05f6c12a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"durationMin\":\"3\",\"durationMax\":\"20\"};","module.exports = __webpack_public_path__ + \"static/media/react_logo.5d5d9eef.svg\";","export const COLORS = [\r\n    'red',\r\n    'blue',\r\n    'purple',\r\n    'pink',\r\n    'orange',\r\n    'green',\r\n    'yellow',\r\n    'gray',\r\n    'teal',\r\n    'cyan',\r\n    'indigo',\r\n    'darkblue',\r\n    'deepskyblue',\r\n    'lawngreen',\r\n    'maroon',\r\n    'magenta',\r\n    'rosybrown',\r\n    'royalblue',\r\n    'salmon',\r\n    'sandybrown'\r\n];\r\n\r\nexport const SHOW_ELEMENT_SCROLL_THRESHOLD = 3/4;\r\n","import { COLORS } from \"./Constants\";\r\n\r\nexport function randomColor(colorsToAvoid) {\r\n    let forbiddenColors;\r\n    if (colorsToAvoid == null) {\r\n        forbiddenColors = [''];\r\n    } else if (typeof(colorsToAvoid) === 'string') {\r\n        forbiddenColors = [colorsToAvoid];\r\n    } else {\r\n        forbiddenColors = colorsToAvoid;\r\n    }\r\n\r\n    let chosenColor;\r\n    do {\r\n        chosenColor = COLORS[Math.floor(Math.random() * COLORS.length)];\r\n    } while(forbiddenColors.includes(chosenColor));\r\n    return chosenColor;\r\n}\r\n\r\nexport function randomNumber(min, max) {\r\n    if (max == null) {\r\n        max = min;\r\n        min = 0;\r\n    }\r\n\r\n    min = Number(min);\r\n    max = Number(max);\r\n    if (isNaN(min) || isNaN(max)) {\r\n        return Math.random();\r\n    }\r\n\r\n    return (Math.random() * (max - min)) + min;\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport 'styles/Triangle.scss';\r\nimport { durationMin, durationMax } from 'styles/Triangle.scss';\r\nimport { randomNumber } from \"../../utils/Functions\";\r\n\r\nclass Triangle extends React.Component {\r\n    render() {\r\n        const {\r\n            upsideDown,\r\n            color,\r\n            height\r\n        } = this.props;\r\n        const base = height / Math.sin(Math.PI / 3); // Equilateral triangle: sin(60deg == pi/3) = height / base\r\n        const baseHalved = base/2; // Actual CSS base length\r\n\r\n        let borderColorField = 'borderBottomColor';\r\n        let borderHeightField = 'borderBottomWidth';\r\n        let originHeight = `${height * 2/3}px`; // deal with uneven border widths by offsetting rotation origin\r\n        const classNames = [\r\n            'triangle'\r\n        ];\r\n        if (upsideDown) {\r\n            borderColorField = 'borderTopColor';\r\n            borderHeightField = 'borderTopWidth';\r\n            originHeight = `${height / 3}px`;\r\n            classNames.push('upside-down');\r\n        }\r\n\r\n        const spinDelay = this.props.spinDelay || randomNumber(1);\r\n        const animationDuration = this.props.animationDuration || Math.round(randomNumber(durationMin, durationMax));\r\n        const style = {\r\n            [borderColorField]: color,\r\n            [borderHeightField]: `${height}px`,\r\n            borderLeftWidth: `${baseHalved}px`,\r\n            borderRightWidth: `${baseHalved}px`,\r\n            animationName: `spin-${animationDuration}`,\r\n            animationDuration: `${animationDuration}s`,\r\n            animationDelay: `${spinDelay}s`,\r\n            transformOrigin: `${baseHalved} ${originHeight}`,\r\n            marginLeft: `-${baseHalved}px`\r\n        };\r\n\r\n        return (\r\n            <div className={classNames.join(' ')} style={style} />\r\n        );\r\n    }\r\n}\r\n\r\nTriangle.propTypes = {\r\n    color: PropTypes.string,\r\n    spinDelay: PropTypes.number,\r\n    animationDuration: PropTypes.number,\r\n    upsideDown: PropTypes.bool,\r\n    height: PropTypes.number\r\n};\r\n\r\nTriangle.defaultProps = {\r\n    color: 'red',\r\n    upsideDown: false,\r\n    height: 86\r\n};\r\n\r\nexport default Triangle;\r\n","import Triangle from './Triangle';\r\n\r\nexport default Triangle;\r\n","import Home from './Home';\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport 'styles/Home.scss';\r\nimport { randomColor } from 'utils/Functions';\r\nimport Triangle from 'components/Triangle';\r\n\r\nclass Home extends React.Component {\r\n    componentDidMount() {\r\n        window.onresize = () => {\r\n            this.forceUpdate();\r\n        }\r\n    }\r\n\r\n    getNeighboringColors(rowIndex, colIndex, colorMatrix) {\r\n        const neighbors = [];\r\n        if (rowIndex > 0) {\r\n            neighbors.push(colorMatrix[rowIndex-1][colIndex]);\r\n        }\r\n        if (colIndex > 0) {\r\n            neighbors.push(colorMatrix[rowIndex][colIndex-1]);\r\n        }\r\n        return neighbors;\r\n    }\r\n\r\n    renderTriangles() {\r\n        const numRows = 8;\r\n        const triangleHeight = window.innerHeight / numRows;\r\n        const numTrianglesInRow = Math.ceil(window.innerWidth / triangleHeight) * 2; // Two triangles fit inside one base length\r\n\r\n        const rows = [];\r\n        const chosenColors = [];\r\n        for (let rowIndex = 0; rowIndex < numRows; rowIndex++) {\r\n            chosenColors.push([]);\r\n            const renderedRow = [];\r\n            for (let colIndex = 0; colIndex < numTrianglesInRow; colIndex++) {\r\n                const neighboringColors = this.getNeighboringColors(rowIndex, colIndex, chosenColors);\r\n                const color = randomColor(neighboringColors);\r\n                chosenColors[rowIndex].push(color);\r\n                renderedRow.push((\r\n                    <Triangle\r\n                        color={color}\r\n                        height={triangleHeight}\r\n                        key={`${rowIndex}-${colIndex}`}\r\n                        upsideDown={(colIndex + rowIndex) % 2 === 0}\r\n                    />\r\n                ));\r\n            }\r\n            rows.push(renderedRow);\r\n        }\r\n\r\n        return (\r\n            <div className={'triangle-section bg-white'}>\r\n                {rows.map((row, i) => (\r\n                    <div className={'triangle-row'} key={i}>\r\n                        {row}\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    renderSplashSection() {\r\n        // TODO add welcome text\r\n        return (\r\n            <React.Fragment>\r\n                {this.renderTriangles()}\r\n                <div style={{height: '500px'}}>Meh</div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                {this.renderSplashSection()}\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react';\r\n\r\nclass About extends React.Component {\r\n    render() {\r\n        return (\r\n            <React.Fragment>About</React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default About;\r\n","import Header from './Header';\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport 'styles/Header.scss';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass Header extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            classList: [\r\n                'header',\r\n                'float-right'\r\n            ]\r\n        };\r\n        this.handleScroll = this.handleScroll.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.addEventListener('scroll', this.handleScroll);\r\n        this.handleScroll();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('scroll', this.handleScroll);\r\n    }\r\n\r\n    handleScroll() {\r\n        const hideHeader = this.isActivePath(0) && window.pageYOffset === 0;\r\n        this.toggleHeader(hideHeader);\r\n    }\r\n\r\n    toggleHeader(hide) {\r\n        const classList = [...this.state.classList];\r\n        const className = 'header-hidden';\r\n        const isHidden = classList.indexOf(className) >= 0;\r\n        if (hide && !isHidden) {\r\n            classList.push(className);\r\n        } else if (!hide && isHidden) {\r\n            classList.splice(isHidden, 1);\r\n        }\r\n        this.setState({ classList: classList});\r\n    }\r\n\r\n    isActivePath(routeIndex) {\r\n        const { path } = this.props.navRoutes[routeIndex];\r\n        const currentPath = window.location.hash.slice(1);\r\n        return currentPath === path;\r\n    }\r\n\r\n    renderNavBar() {\r\n        const routeLinks = this.props.navRoutes.map((routeAria, index) => {\r\n            const { path, name } = routeAria;\r\n            const active = this.isActivePath(index);\r\n            const classNames = ['nav-link'];\r\n            if (active) {\r\n                routeAria.active = true;\r\n                classNames.push('active');\r\n            }\r\n            return (\r\n                <Link to={path} className={classNames.join(' ')} key={path} replace={active}>{name}</Link>\r\n            );\r\n        });\r\n\r\n        return (\r\n            <nav className={'nav border-left border-bottom border-primary border-size-3 bg-dark'}>\r\n                {routeLinks}\r\n            </nav>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        const navBar = this.renderNavBar();\r\n\r\n        return (\r\n            <header className={this.state.classList.join(' ')} ref={this.ref}>\r\n                {navBar}\r\n            </header>\r\n        );\r\n    }\r\n}\r\n\r\nHeader.propTypes = {\r\n    navRoutes: PropTypes.arrayOf(PropTypes.shape({\r\n        path: PropTypes.string.isRequired,\r\n        component: PropTypes.func.isRequired\r\n    }))\r\n};\r\n\r\nexport default Header;\r\n","import Footer from './Footer';\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\nimport reactLogo from 'assets/react_logo.svg';\r\nimport 'styles/Footer.scss';\r\n\r\nclass Footer extends React.Component {\r\n    renderReactLogo() {\r\n        return (\r\n            <span>\r\n                <h4 className={'footer-title'}>Made with React 16</h4>\r\n                <img src={reactLogo} className=\"react-logo\" alt=\"logo\" />\r\n            </span>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <footer className={'footer-container w-100'}>\r\n                {this.renderReactLogo()}\r\n            </footer>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\nimport { HashRouter as Router, Route } from 'react-router-dom';\r\nimport Home from 'components/Home';\r\nimport About from 'components/About';\r\nimport Header from 'components/Header';\r\nimport Footer from 'components/Footer';\r\n\r\nconst routes = [\r\n    {\r\n        path: '/',\r\n        component: Home,\r\n        name: 'Home',\r\n        exact: true\r\n    },\r\n    {\r\n        path: '/about',\r\n        component: About,\r\n        name: 'About'\r\n    }\r\n];\r\n\r\nfunction Routes(props) {\r\n    const renderedRoutes = routes.map(routeAria => (\r\n        <Route key={routeAria.path} {...routeAria} />\r\n    ));\r\n    return (\r\n        <Router basename={props.basedir}>\r\n            <React.Fragment>\r\n                <Header basedir={props.basedir} navRoutes={routes} />\r\n                {renderedRoutes}\r\n                <Footer />\r\n            </React.Fragment>\r\n        </Router>\r\n    );\r\n}\r\n\r\nclass App extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"App text-center\">\r\n                <Routes />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/ServiceWorker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'styles/index.scss';\r\nimport App from 'components/App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\nconst rootDiv = document.getElementById('root');\r\n\r\nReactDOM.render(\r\n    <App />,\r\n    rootDiv\r\n);\r\nregisterServiceWorker();\r\n\r\n// hot reloading\r\nif (process.env.NODE_ENV !== 'production' && module.hot) {\r\n  console.log('hot reloading active');\r\n  module.hot.accept('components/App', () => {\r\n    const NextApp = require('components/App').default;\r\n    ReactDOM.render(\r\n      <NextApp />,\r\n      rootDiv\r\n    )\r\n  })\r\n}\r\n"],"sourceRoot":""}